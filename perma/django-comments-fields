<html>
    <head>
        <link rel="stylesheet" type="text/css" href="../temp/style.css">
        <title>Ulugha | django-comments-fields</title>
    </head>
    <body>
            

<div class="post">
    <h1>Django comment&#8217;s fields</h1>

<h2>19 October 2008 &#8211; Bucharest</h2>

<p>Upon reading the nice <a href="http://docs.djangoproject.com/en/dev/ref/contrib/comments/#module-django.contrib.comments">documentation</a> for the new comment framework in django 1.0, one might wonder what are the fields attached to the comment entity which you are to iterate against:</p>

<pre lang="python"><code>
{% for comment in comment_list %}
     ...
{% endfor %}
</code></pre>

<p>There&#8217;s something wrong in that code. The ellipsis!<br />
So what should you write in there? There&#8217;s no mention of the comment fields in the docs, so I put on my rubber boots and got down to my dbshell so you don&#8217;t have to.</p>

<pre lang="mysql"><code>
revolution=> \d+ django_comments
                                             Table "public.django_comments"
     Column      |           Type           |                          Modifiers                           | Description 
-----------------+--------------------------+--------------------------------------------------------------+-------------
 id              | integer                  | not null default nextval('django_comments_id_seq'::regclass) | 
 content_type_id | integer                  | not null                                                     | 
 object_pk       | text                     | not null                                                     | 
 site_id         | integer                  | not null                                                     | 
 user_id         | integer                  |                                                              | 
 user_name       | character varying(50)    | not null                                                     | 
 user_email      | character varying(75)    | not null                                                     | 
 user_url        | character varying(200)   | not null                                                     | 
 comment         | text                     | not null                                                     | 
 submit_date     | timestamp with time zone | not null                                                     | 
 ip_address      | inet                     |                                                              | 
 is_public       | boolean                  | not null                                                     | 
 is_removed      | boolean                  | not null                                                     | 
Indexes:
    "django_comments_pkey" PRIMARY KEY, btree (id)
    "django_comments_content_type_id" btree (content_type_id)
    "django_comments_site_id" btree (site_id)
    "django_comments_user_id" btree (user_id)
Foreign-key constraints:
    "django_comments_content_type_id_fkey" FOREIGN KEY (content_type_id) REFERENCES django_content_type(id) DEFERRABLE INITIALLY DEFERRED
    "django_comments_site_id_fkey" FOREIGN KEY (site_id) REFERENCES django_site(id) DEFERRABLE INITIALLY DEFERRED
    "django_comments_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth_user(id) DEFERRABLE INITIALLY DEFERRED
Has OIDs: no
</code></pre>

<p>So here&#8217;s how a simple django template with comments would look like, the relevant part:</p>

<pre lang="python"><code>
{% get_comment_count for post as comment_count %}
{% get_comment_list for post as comment_list %}
<h2>{{ post.title }}</h2>
<div id="undertitle">{{ post.creation_time }}</div>
{{ post.body }}
<div id="comments"><p>{{ comment_count }}</p>
    {% for comment in comment_list %}
    <div id="comment">
        <a href="{{ comment.user_url }}">{{ comment.user_name }}</a>
        <h4>{{ comment.submit_date }}</h4>
        {{ comment.comment }}
    </div>
    {% endfor %}
    {% render_comment_form for post %}
</div>
</code></pre>

<p>You can play with the <em>is_public</em> and <em>is_removed</em> fields in the admin site <del>and you can also modify any other fields in your users&#8217; posts</del>. You could also use the <em>ip_address</em> field to display <a href="http://coulix.net/blog/2006/aug/17/ip-country-flags-django-comments/">country flags in your comments</a> .</p>

<p>The django comments provide a spam-fighting technique by default, in the form of a <a href="http://docs.djangoproject.com/en/dev/ref/contrib/comments/#notes-on-the-comment-form">honeypot</a> (though I wonder how effective that is) as well as other extras. There are rumours that some sort of captcha system (some say <a href="http://recaptcha.net/">reCaptcha</a> ) will be integrated in the django comments framework.</p>

<p>Take more risks! Live more dangerously!</p>
</div>

    </body>
</html>
