<?xml version="1.0" encoding="utf-8" ?>
<rss version="1.0">
    <channel>
        <title>Revolution blahg</title>
        <link>http://mapleoin.bluepink.ro/</link>
        <description>mapleoin's rambling blahg</description>
        <language>en</language>
        <pubDate>Tue, 27 Sep 2011 11:48:56 +0300</pubDate>
        <generator>pyBlee!</generator>
        <item>
            <title>Copr final report</title>
            <link>http://mapleoin.bluepink.ro/perma/copr-final-report</link>
            <author>mapleoin@bluepink.ro (mapleoin)</author>
            <description>  &lt;p&gt;&lt;a href="https://fedoraproject.org/wiki/Summer_Coding_2010"&gt;Fedora Summer Coding&lt;/a&gt; is now over for me and I&amp;#8217;m really glad of what I learned and coded this summer.&lt;/p&gt;
&lt;p&gt;Our initial goal was to develop a TurboGears2 Web app and &lt;span class="caps"&gt;JSON&lt;/span&gt; &lt;span class="caps"&gt;API&lt;/span&gt; for &lt;a href="https://fedoraproject.org/wiki/Category:Copr"&gt;Fedora Copr&lt;/a&gt;. When finished, Copr should provide everyone with a place to build Fedora packages and host custom repositories for everyone to enjoy. This is a project that should prove quite popular in the Fedora Community when it gets released and I&amp;#8217;m glad to have played a role in its development.&lt;/p&gt;
&lt;p&gt;At first I worked on the web app, modeling the database and the relationship between coprs and repos and packages and then developing the &lt;span class="caps"&gt;JSON&lt;/span&gt; &lt;span class="caps"&gt;API&lt;/span&gt;. When the midterm came, my mentor and I decided that I should also contribute to the other parts of Copr. The original schedule had a simple command-line client planned, but we went further than that. In the end all of the functionality of the &lt;span class="caps"&gt;JSON&lt;/span&gt; &lt;span class="caps"&gt;API&lt;/span&gt; also got implemented in a client library (based on and very similar to &lt;a href="https://fedorahosted.org/python-fedora/"&gt;python-fedora&lt;/a&gt;) and in a command-line client. I also got to dive into python-fedora&amp;#8217;s and repoze.who&amp;#8217;s internals in order to get basic &lt;span class="caps"&gt;HTTP&lt;/span&gt; authentication working for TurboGears2.&lt;/p&gt;
&lt;p&gt;My latest work has been on the &lt;a href="https://fedorahosted.org/func/"&gt;func&lt;/a&gt; module. This is the buildsystem part of Copr. Func minions running this module will be commanded by &lt;a href="https://fedorahosted.org/headhunter"&gt;headhunter&lt;/a&gt; (Copr&amp;#8217;s scheduler) to build packages in mock and then move them into repositories. The module also creates, updates and deletes package repositories and will check the built packages for Fedora conformance (e.g. licensing) &amp;#8211; this last part is not yet implemented. I got to play with virtual machines and func and &lt;a href="https://fedoraproject.org/wiki/Projects/Mock"&gt;mock&lt;/a&gt; and &lt;a href="http://createrepo.baseurl.org/"&gt;createrepo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There is a more synthethic overview of all the different things that got implemented &lt;a href="https://fedoraproject.org/wiki/User:Mapleoin/FSC-Copr-status"&gt;on the wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Overall, I&amp;#8217;m really glad of what I learned this summer. This project really got me involved in a lot of different levels of the architecture of a web service and a lot of different technologies. Some of the things I worked on looked really scary at first, but as I went nearer and read more code the mist slowly vanished.&lt;/p&gt;
&lt;p&gt;My mentor, &lt;a href="http://anonbadger.wordpress.com/"&gt;Toshio Kuratomi&lt;/a&gt; was great as always. This isn&amp;#8217;t the first project I&amp;#8217;ve had him as my mentor. He was always there to talk to and always had great answers to all of my questions. He had great patience in answering and explaining anything I asked about. Our discussions were mostly about the architecture of the app we were building, but he also gave me great tips on the inner workings of python-fedora or on deploying the web app. I felt I had a lot of liberty to decide the way things will get implemented. Regardless of whether we will ever work together again, Toshio will always be a great inspiration for me as a programmer and as a person.&lt;/p&gt; </description>
            <pubDate>Tue, 28 Sep 2010 15:33 GMT</pubDate>
        </item>
        <item>
            <title>FSC: moving to the buildsystem</title>
            <link>http://mapleoin.bluepink.ro/perma/moving-on-to-the-buildsystem</link>
            <author>mapleoin@bluepink.ro (mapleoin)</author>
            <description>  &lt;p&gt;I started working on the buildsystem part of copr this week. Right now, I&amp;#8217;m still getting familiar with &lt;a href="http://fedorahosted.org/func"&gt;func&lt;/a&gt;. That&amp;#8217;s what we&amp;#8217;ll be using to communicate with the builder machines: get them running errands and get back status reports at any time. I spent a lot of time getting a virtual machine setup with libvirt; networking especially was a pain (mostly because of my pppoe connection I think).&lt;/p&gt;
&lt;p&gt;One nice feature of func that I think we&amp;#8217;ll be using a lot is the &lt;a href="https://fedorahosted.org/func/wiki/AsyncUsage"&gt;async mode&lt;/a&gt;. A mock build takes a lot of time, what with all the yumming and compiling. So starting a task via one of the user interfaces and then choosing whether or not to keep watching it and what to watch for will probably be an essential part of the buildsystem&amp;#8217;s functionality.&lt;/p&gt;
&lt;p&gt;In the meantime, we&amp;#8217;re slowly &lt;a href="https://fedorahosted.org/fedora-infrastructure/ticket/2339"&gt;getting resources&lt;/a&gt; for the deployment of Copr. Toshio got a running instance of the current state of the TG app on &lt;a href="http://publictest1.fedoraproject.org/copr/"&gt;publictest1&lt;/a&gt;. It looks just like a quickstarted TG app, because it doesn&amp;#8217;t have any WebUI. But it can &lt;span class="caps"&gt;CRUD&lt;/span&gt; coprs, handle dependencies between them, handle permissions and &lt;span class="caps"&gt;CRD&lt;/span&gt; packages. Most of the functions require a &lt;a href="http://admin.fedoraproject.org/accounts"&gt;FAS&lt;/a&gt; account, but you don&amp;#8217;t need one to see a &lt;a href="http://publictest1.fedoraproject.org/copr/coprs.json"&gt;list of all the coprs&lt;/a&gt;, or a &lt;a href="http://publictest1.fedoraproject.org/copr/firstcopr/packages.json"&gt;list of packages in a copr&lt;/a&gt;.&lt;/p&gt; </description>
            <pubDate>Mon, 06 Sep 2010 19:53 GMT</pubDate>
        </item>
        <item>
            <title>the Copr client part II</title>
            <link>http://mapleoin.bluepink.ro/perma/copr-client-part-2</link>
            <author>mapleoin@bluepink.ro (mapleoin)</author>
            <description>  &lt;p&gt;I spent this week finishing up the copr client. It now supports all the functionality that the Copr TG &lt;span class="caps"&gt;API&lt;/span&gt; supports. It&amp;#8217;s not much, but it&amp;#8217;s a starting point.&lt;/p&gt;
&lt;p&gt;I spent a lot of time trying to understand the way repoze.who works and the authentication plugins that we&amp;#8217;re using for the &lt;a href="https://fedorahosted.org/python-fedora/"&gt;python-fedora&lt;/a&gt; &lt;a href="https://admin.fedoraproject.org/accounts"&gt;FAS&lt;/a&gt; authentication plugin. I finally understood it, I think&amp;#8230; The Fedora client library didn&amp;#8217;t support basic &lt;span class="caps"&gt;HTTP&lt;/span&gt; Authentication for TG2 apps so I had to figure out how to integrate that into our authentication plugin. It was quite fun all in all, repoze.who has a very interesting way of doing authentication and writing wsgi middleware is always exciting ;). This patch will hopefully go upstream to python-fedora now.&lt;/p&gt;
&lt;p&gt;This next week I&amp;#8217;ll probably start working on the buildsystem part of Copr. There are a lot of new things to learn there.&lt;/p&gt; </description>
            <pubDate>Mon, 30 Aug 2010 10:42 GMT</pubDate>
        </item>
        <item>
            <title>the Copr client</title>
            <link>http://mapleoin.bluepink.ro/perma/copr-client</link>
            <author>mapleoin@bluepink.ro (mapleoin)</author>
            <description>  &lt;p&gt;This last week I started working on the command line client to &lt;a href="https://fedoraproject.org/wiki/Category:Copr"&gt;Copr&lt;/a&gt;. Luckily, the &lt;a href="https://fedorahosted.org/python-fedora"&gt;python-fedora&lt;/a&gt; already has a lot of code in place to make the task of writing clients for TurboGears apps a lot easier. Some of &lt;a href="http://admin.fedoraproject.org/pkgdb"&gt;the&lt;/a&gt; &lt;a href="http://admin.fedoraproject.org/updates"&gt;apps&lt;/a&gt; &lt;a href="http://admin.fedoraproject.org/accounts"&gt;in&lt;/a&gt; infrastructure are already using this library, which make for some good examples.&lt;/p&gt;
&lt;p&gt;So I&amp;#8217;m building a client library and a client um&amp;#8230; command line client. The command line client is basically one big &lt;a href="http://docs.python.org/library/argparse.html"&gt;argparse&lt;/a&gt; application that calls the functions in the client library and sometimes does a bit of formatting on the output. The client library implements a fedora.client.BaseClient that mostly just calls json methods on the Copr server.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s all pretty simple. The hard part is deciding what the command line client&amp;#8217;s interface will look like. In argparse parlance, which ones should be the positional arguments and which should be the optional arguments. So far I&amp;#8217;ve been inclined to use something that looks like a VCS&amp;#8217;s interface. Here&amp;#8217;s what it looks like so far:&lt;/p&gt;
&lt;pre&gt;
$ python client/bin.py -h
usage: bin.py [-h] [-v] [-u USERNAME] [-p PASSWORD] [--url URL]
              {info,edit,create,list,delete}
Command line tool for interacting with Fedora Copr
positional arguments:
  {info,edit,create,list,delete}
    list                list all the available Coprs
    info                get information about a specific Copr
    create              create a new Copr
    edit                edit an existing copr
    delete              delete an existing copr
optional arguments:
  -h, --help            show this help message and exit
  -v, --version
  --url URL             provide an alternate url for the Copr service
authentication:
  -u USERNAME, --username USERNAME
  -p PASSWORD, --password PASSWORD
&lt;/pre&gt;
&lt;p&gt;Right now, all the copr functions are top-level. I wonder if I&amp;#8217;ll have to create a deeper level of nesting when I start implementing package-related functions.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m also having a few problems with the BaseClient that I&amp;#8217;ll probably have to solve this week. All of the other client libraries were written for TurboGears 1.x and it seems that authentication has changed in TurboGears 2. There&amp;#8217;s also no support for &lt;span class="caps"&gt;HTTP&lt;/span&gt; &lt;span class="caps"&gt;PUT&lt;/span&gt; and &lt;span class="caps"&gt;DELETE&lt;/span&gt; which I would like to use since I used RestControllers in the &lt;span class="caps"&gt;API&lt;/span&gt;. I also had to write a patch for file upload support; that seems to work well so far.&lt;/p&gt; </description>
            <pubDate>Mon, 23 Aug 2010 10:07 GMT</pubDate>
        </item>
        <item>
            <title>Ruby koans</title>
            <link>http://mapleoin.bluepink.ro/perma/ruby-koans</link>
            <author>mapleoin@bluepink.ro (mapleoin)</author>
            <description>  &lt;p&gt;I had a great time today with &lt;a href="http://www.rubykoans.com/"&gt;Ruby Koans&lt;/a&gt;. It took me about 5 hours in all. A good way to spend a Sunday afternoon I suppose.&lt;/p&gt;
&lt;p&gt;These Ruby Koans are a great way to go on a quick journey through a lot of Ruby&amp;#8217;s common features. You basically have to edit tests in order to get them working. It&amp;#8217;s mostly reading tests actually, but the fact that you have to fill in some blanks keeps the mind from wandering. There are also a couple of exercises which imply a bit more coding.&lt;/p&gt;
&lt;p&gt;I have a good knowledge of Python and have worked with Ruby in the past on a little Rails project. I had forgotten anything I knew about Ruby though. Yesterday, I don&amp;#8217;t think I would&amp;#8217;ve been able to write a foobaz in Ruby without looking for help online. This proved to be a welcome refresher. Solving these koans gives a great tour of Ruby. As I went through them I kept thinking of how I would do those things with Python. I really like Python&amp;#8217;s philosophy and maybe solving all these ruby koans has made me appreciate Python&amp;#8217;s simplicity and predictability a bit more. Ruby allows for a lot more flexibility however and the koans left me to wonder at what amazing feats this language could accomplish.&lt;/p&gt;
&lt;p&gt;I wouldn&amp;#8217;t recommend this to a beginner however. While I think I now have a pretty good idea of what the language can do, there were no whys or recommendations about all these features. Maybe it would be a good starting point (or a &lt;em&gt;dive&lt;/em&gt;) for someone coming from a similar language (like Python), before moving on to a good Ruby book. The website claims that they teach culture in addition to Ruby. I would&amp;#8217;ve liked more of that. Maybe it was too subtle for me, but I didn&amp;#8217;t notice anything other than some references to oriental philosophy: &lt;code&gt;test_assert_truth has damaged your karma. You have not yet reached enlightenment ...&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;There are a lot of ports of the Ruby Koans. There&amp;#8217;s one for &lt;a href="http://wiki.github.com/gregmalcolm/python_koans/"&gt;python&lt;/a&gt; and there are also a bunch for &lt;a href="http://github.com/relevance/functional-koans"&gt;functional languages&lt;/a&gt;: Clojure, F#, Haskell and Scala. These look like a lot of fun, maybe I&amp;#8217;ll try them next week.&lt;/p&gt; </description>
            <pubDate>Sun, 22 Aug 2010 22:22 GMT</pubDate>
        </item>
        <item>
            <title>Fedora Summer Coding midterm</title>
            <link>http://mapleoin.bluepink.ro/perma/midterm-report</link>
            <author>mapleoin@bluepink.ro (mapleoin)</author>
            <description>  &lt;p&gt;This midterm scared me when I found out about it on Friday when I looked at the schedule I had set myself. However, I have done the work that I should have done by this point in the project. When I wrote the proposal I had assumed that the buildsystem would already be built before me starting coding on the TG app, but that is not the case. Therefore I could only code the user-facing &lt;span class="caps"&gt;JSON&lt;/span&gt; interface that interacts with the DB as it would if the buildsystem would provide it with packages and repos. Except that there are no packages and repos at this stage.&lt;/p&gt;
&lt;p&gt;So for this midterm, we&amp;#8217;ve got working Copr &lt;span class="caps"&gt;CRUD&lt;/span&gt;, dependency handling and release/repo editing on a Copr. I also coded the Package &lt;span class="caps"&gt;CRUD&lt;/span&gt;, which basically allows for uploads of SRPMs, stores the info in the db and also allows for information retrieval and deleting packages. Actually building packages and retrieving packagebuilds will have to wait for the buildsystem to be built.&lt;/p&gt;
&lt;p&gt;After I finish polishing things a bit, I will probably start working on a basic client and then maybe move on to working on the buildsystem part of Copr. That should be loads of fun especially since I haven&amp;#8217;t done anything quite like this before. So it will be hard, but fun :).&lt;/p&gt;
&lt;p&gt;If anyone wants to check out what Copr looks like so far, you&amp;#8217;ll just have to install TurboGears 2.0.x and then:&lt;/p&gt;
&lt;div class="Bash"&gt;&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="nv"&gt;$ &lt;/span&gt;bzr branch bzr://bzr.fedorahosted.org/bzr/copr/devel
 &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;devel
 &lt;span class="nv"&gt;$ &lt;/span&gt;python setup.py develop
 &lt;span class="nv"&gt;$ &lt;/span&gt;paster setup-app development.ini
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And you should have a working Copr. You can run the unit tests with the &lt;code&gt;nosetests&lt;/code&gt; command and all 52 of them should run fine. Yay!&lt;/p&gt;
&lt;p&gt;Congratulations to everyone who is finishing their &lt;span class="caps"&gt;FSC&lt;/span&gt; adventure today! I&amp;#8217;ll still be coding for another month or so.&lt;/p&gt; </description>
            <pubDate>Mon, 16 Aug 2010 12:17 GMT</pubDate>
        </item>
        <item>
            <title>Copr design - being all things to all people</title>
            <link>http://mapleoin.bluepink.ro/perma/copr-design-being-all-things</link>
            <author>mapleoin@bluepink.ro (mapleoin)</author>
            <description>  &lt;p&gt;Lots of things happened this third Fedora Summer Coding week. Most people are already wrapping up, but I feel like I&amp;#8217;m still at the beginning.&lt;/p&gt;
&lt;p&gt;The biggest accomplishment of this week has got to be the fact that we (I and my mentor, Toshio) settled on a stable design for representing Coprs, Repos and their relationships. It was harder than it might seem, since we&amp;#8217;ve got all these different entities in Fedora: we&amp;#8217;ve got repos that you could look at as being either a directory with a release and an architecture or a repofile that is the same across releases and arches. When talking about releases we&amp;#8217;ve got Fedora releases (e.g. Fedora 13, Fedora 14) and then we&amp;#8217;ve got the packages for other distros with their own releases: &lt;span class="caps"&gt;EPEL&lt;/span&gt; and &lt;span class="caps"&gt;OLPC&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Now, on top of all of this we&amp;#8217;ve got Coprs and (at least) two groups of users for the API: the end-users of the Coprs &amp;#8211; the people that install the repos and the packages and the developers of the packages in the Coprs. The end users shouldn&amp;#8217;t have to deal with the intricacies of the Copr/Repos/Releases model; ideally they&amp;#8217;d just have one big button per the distribution they&amp;#8217;re using, so they can install the repo once and have it work even after they&amp;#8217;ve upgraded their distro three times or reinstalled five times (which is sort of how a repofile works). The package developers on the other hand could get hurt by the differences between different distro releases and their different packages &amp;#8211; when depending on different package versions for example.&lt;/p&gt;
&lt;p&gt;So finally we get to Coprs which should basically be a collection of packages that are available for one or more distros with each one having one or more releases. The package maintainer gets to create a Copr and choose a number of releases which they want to support with that Copr. One Copr can depend on as many other Coprs as needed. When the maintainer creates a Copr, the Copr App will automatically create repos for all of the specified releases and for each of the architectures that are supported by the buildsystem.&lt;/p&gt;
&lt;p&gt;Everything I said until now is already implemented at the level of the TurboGears App which will provide the &lt;span class="caps"&gt;API&lt;/span&gt; for the web interface and any number of &lt;span class="caps"&gt;JSON&lt;/span&gt; clients. The schema is built and the database insteraction works fine, but repos don&amp;#8217;t actually get created, because that&amp;#8217;s not part of my proposal and will be handled at a different level. Oh and it&amp;#8217;s all unit tested!&lt;/p&gt;
&lt;p&gt;This week wasn&amp;#8217;t just designing and building though, I spent a lot of time digging through TurboGears2 and its sub-packages&amp;#8217; documentation for things that should make the code simpler: raising &lt;span class="caps"&gt;JSON&lt;/span&gt; errors from nested functions, sending list arguments to &lt;span class="caps"&gt;JSON&lt;/span&gt; functions via WebTest post requests and even returning a flat list from a SQLAlchemy query on a single table column. All of these things seem to me like they should already be implemented and easy to use which makes me waste time searching for them. In fact they either are bugs or require coding them myself (at least from what I understand so far). I&amp;#8217;ll have to investigate further, especially now since the weekend is over and I hope there&amp;#8217;ll be more people answering questions on &lt;span class="caps"&gt;IRC&lt;/span&gt; and on issue trackers.&lt;/p&gt;
&lt;p&gt;This next week I&amp;#8217;ll mostly start worrying about what happens when a package maintainer submits a package to be built and that package has the right dependencies available in some releases, but not others, even though the Copr should support all of them. Will she have to submit different &lt;span class="caps"&gt;SRPMS&lt;/span&gt; for each release or should the Copr have the same version of the package in all of its releases? This will be a matter of settling upon a contract that the Copr provides its users and how uniform the Copr&amp;#8217;s content has to be.&lt;/p&gt;
&lt;p&gt;Fedora Summer Coding! Yay!&lt;/p&gt; </description>
            <pubDate>Mon, 09 Aug 2010 12:07 GMT</pubDate>
        </item>
        <item>
            <title>CRUD for Coprs and testing</title>
            <link>http://mapleoin.bluepink.ro/perma/basic-coprs-crud</link>
            <author>mapleoin@bluepink.ro (mapleoin)</author>
            <description>  &lt;p&gt;This last week I worked on the first controller for the &lt;a href="https://fedoraproject.org/wiki/Category:Copr"&gt;Copr&lt;/a&gt; &lt;a href="https://fedoraproject.org/wiki/Summer_Coding_2010_proposal_-_Copr_TG_app"&gt;TG App&lt;/a&gt;. There is now a &lt;span class="caps"&gt;JSON&lt;/span&gt; &lt;span class="caps"&gt;API&lt;/span&gt; to &lt;span class="caps"&gt;CRUD&lt;/span&gt; Coprs in the TG App&amp;#8217;s database. It also supports adding/removing Copr dependencies. And everything in this first controller is (mostly?) tested with nose unit tests. The happy thing is I&amp;#8217;m still on schedule, though I&amp;#8217;m not ahead of it anymore, which I actually expected.&lt;/p&gt;
&lt;p&gt;I encountered a couple of problems while setting up testing. I installed python-fedora&amp;#8217;s &lt;span class="caps"&gt;FAS&lt;/span&gt; authorization repoze-who plugin and wasted a lot of time trying to get that working with webtest. In the process I managed to screw up something in my TurboGears installation. Since I was already too deep down the rabbit&amp;#8217;s hole I gave up on it. (I also figured out that I don&amp;#8217;t actually need to test anything about the &lt;span class="caps"&gt;FAS&lt;/span&gt; integration so I don&amp;#8217;t even need to install it). So I proceeded to install TG2 inside a python virtualenv which feels a lot more hygienic and will be a lot easier to replace in case of future screw-ups. I had a few problems there aswell since the documented way to install TurboGears2 without distro-packages is broken &lt;span class="caps"&gt;ATM&lt;/span&gt;, but I now have virtualenv! Yay!&lt;/p&gt;
&lt;p&gt;Now the next step is to figure out the right relationship between Coprs and Repos and write some code to manage Repos transparently for the user. I also have to learn to write more frequent status updates.&lt;/p&gt; </description>
            <pubDate>Mon, 02 Aug 2010 18:00 GMT</pubDate>
        </item>
        <item>
            <title>The late Fedora Summer coder</title>
            <link>http://mapleoin.bluepink.ro/perma/the-late-fedora-summer-coder</link>
            <author>mapleoin@bluepink.ro (mapleoin)</author>
            <description>  &lt;p&gt;I started my &lt;a href="https://fedoraproject.org/wiki/Summer_Coding_2010"&gt;Fedora Summer Coding&lt;/a&gt; last week. Although most people started almost two months ago, I chose (and was allowed to &amp;#8211; Yay, &lt;acronym title="Fedora Summer Coding"&gt;FSC&lt;/acronym&gt;!) a different schedule because I just finished college last week.&lt;/p&gt;
&lt;p&gt;This summer I&amp;#8217;ll be working on a new project for Fedora &amp;#8211; &lt;a href="https://fedoraproject.org/wiki/Category:Copr"&gt;Copr&lt;/a&gt;. Fedora Copr will allow any Fedorian to have their own package repository with packages built and hosted by &lt;a href="https://fedoraproject.org/wiki/Infrastructure"&gt;Fedora&amp;#8217;s Infrastructure&lt;/a&gt;. My mentor this summer will be &lt;a href="http://anonbadger.wordpress.com/"&gt;Toshio&lt;/a&gt;, I&amp;#8217;ve always enjoyed working with him and this summer will be no different. &lt;a href="https://fedoraproject.org/wiki/Summer_Coding_2010_proposal_-_Copr_TG_app"&gt;Here&lt;/a&gt; is my actual &lt;acronym title="Fedora Summer Coding"&gt;FSC&lt;/acronym&gt; proposal. Although the things written in that proposal are turning out to be a bit inaccurate, it&amp;#8217;s still a good bird&amp;#8217;s eye view of what I&amp;#8217;m going to do this summer. &lt;/p&gt;
&lt;p&gt;So about the first week. Things started really slow. I did a lot of orientation, certainly more than I thought I would. I hadn&amp;#8217;t used TurboGears2 before, though I had worked with TurboGears 1.x on &lt;a href="https://admin.fedoraproject.org/pkgdb"&gt;Fedora&amp;#8217;s pkgdb&lt;/a&gt;. When I started out I had only a TG2 automatically generated skeleton app &amp;#8211; well it&amp;#8217;s mostly the same now, though at least I now know a lot more about what&amp;#8217;s in there. The fact that I had to start it up myself meant I had to learn a lot of things about TG2 that I would&amp;#8217;ve normally just copied from other parts of a fully-functional project. And that was a great experience. In a way it&amp;#8217;s fulfilling to be able to &lt;em&gt;pioneer&lt;/em&gt; things in this way ;). I&amp;#8217;m trying to only ask my mentor questions about designing the actual app and solve my &amp;#8220;How do I &amp;#8230; in TurboGears/Python?&amp;#8221; questions elsewhere. My mentor has always given me a lot of independence when working on things and that feels really good, though at times I feel inexperienced. There&amp;#8217;s the thought that the project I&amp;#8217;m working on will be used by a lot of technical users and I&amp;#8217;m really not sure what my decisions&amp;#8217; impact will be on the whole project.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m mostly on time with my &lt;a href="https://fedoraproject.org/wiki/Summer_Coding_2010_proposal_-_Copr_TG_app#Timeline"&gt;mock-up schedule&lt;/a&gt; because I had set the first week for orienteering. I also wrote the DB schema for Coprs, though that was on the second week. That doesn&amp;#8217;t mean I&amp;#8217;m ahead of schedule however, because I&amp;#8217;ll probably have a lot to work on the Copr controllers, and a lot of documenting and designing.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m proud that I setup testing after a day of wading through the scattered documentation of TurboGears2 testing. There&amp;#8217;s mostly no documentation on testing on the &lt;a href="http://www.turbogears.org/2.0/docs/toc.html"&gt;TurboGears2.0 docs website&lt;/a&gt;. So I went to the &lt;a href="http://somethingaboutorange.com/mrl/projects/nose/0.11.2/"&gt;python nose&lt;/a&gt; webpage. But they don&amp;#8217;t have any info on the TurboGears2 web helpers which I needed to use. So I went to &lt;a href="http://pylonsbook.com/en/1.1/testing.html"&gt;pylonshq docs about testing&lt;/a&gt;, but they use a slightly different syntax because they&amp;#8217;re using paste.fixture. I finally found the &lt;a href="http://turbogears.org/2.1/docs/main/Testing/index.html"&gt;TurboGears2.1 testing docs&lt;/a&gt; which was what I really needed. It turns out that TurboGears 2.x uses &lt;a href="http://pythonpaste.org/webtest/"&gt;WebTest&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So now I have testing. My project is not supposed to have any web interface at this point, so writing tests is the easiest way to prove that things are actually working.&lt;/p&gt;
&lt;p&gt;This next week I&amp;#8217;ll probably get some work done on Copr controllers. Implementing the ability to &lt;span class="caps"&gt;CRUD&lt;/span&gt; Coprs and Repos.&lt;/p&gt; </description>
            <pubDate>Sun, 25 Jul 2010 14:00 GMT</pubDate>
        </item>
        <item>
            <title>Cum să actualizezi metadatele yum în mod automat</title>
            <link>http://mapleoin.bluepink.ro/perma/actualizare-automata-metadata-yum</link>
            <author>mapleoin@bluepink.ro (mapleoin)</author>
            <description>  &lt;p&gt;Unul dintre lucrurile care mă enervează cel mai tare ca utilizator desktop la yum e că de fiecare dată când vreau să caut sau să instalez un pachet, trebuie să aștept câteva secunde bune până își actualizează metadatele pentru toate depozitele active. Astăzi am avut timp să caut o metodă de a scăpa de neplăcerea asta și a fost destul de simplu de găsit.&lt;/p&gt;
&lt;p&gt;Rezolvarea nu este să dezactivăm complet actualizarea metadatelor, pentru că am putea încerca să instalăm pachete a căror dependințe au fost actualizate și a căror versiune exactă nu se mai găsește în depozit =&gt; &lt;em&gt;dependency hell&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Se pare că există un program &lt;em&gt;yum-updatesd&lt;/em&gt; (&lt;code&gt;su -c "yum install yum-updatesd"&lt;/code&gt;) care poate actualiza automat metadatele.&lt;/p&gt;
&lt;p&gt;După ce l-am instalat, putem modifica &lt;code&gt;/etc/yum/yum-updatesd.conf&lt;/code&gt; dacă vrem să facem lucruri dubioase, cum ar fi să îl lăsăm să instaleze actualizări automat &amp;#8212; pentru că trăim într-o utopie în care actualizările nu strică niciodată nimic &amp;#8212; sau, mai puțin dubios, doar să le descarce.&lt;/p&gt;
&lt;p&gt;Acum că am terminat cu setările, putem porni serviciul cu:&lt;/p&gt;
&lt;div class="Bash"&gt;&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="nv"&gt;$ &lt;/span&gt;su -c &lt;span class="s2"&gt;&amp;quot;service yum-updatesd start&amp;quot;&lt;/span&gt;
 &lt;span class="nv"&gt;$ &lt;/span&gt;cacamaca
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Și îl putem pune să se pornească automat la fiecare boot:&lt;/p&gt;
&lt;div class="Bash"&gt;&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="nv"&gt;$ &lt;/span&gt;su -c &lt;span class="s2"&gt;&amp;quot;chkconfig yum-updatesd on&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt; </description>
            <pubDate>Thu, 18 Mar 2010 14:00 GMT</pubDate>
        </item>
        <item>
            <title>Beginning packaging for Fedora</title>
            <link>http://mapleoin.bluepink.ro/perma/packaging-for-fedora</link>
            <author>mapleoin@bluepink.ro (mapleoin)</author>
            <description>  &lt;p&gt;With &lt;span class="caps"&gt;GSOC&lt;/span&gt; now over, which I should write a blogpost about soon, I&amp;#8217;ve taken a break from pkgdb and web programming and started developing another skill.&lt;/p&gt;
&lt;p&gt;The fact that &lt;a href="https://admin.fedoraproject.org/pkgdb/users/packages/mapleoin"&gt;this page&lt;/a&gt; is empty has been bugging me for too much time, so I set out to fix it. I also wanted to find out more about the packaging process and the road of a package before it gets accepted into fedora&amp;#8217;s official repos which is a bit complex. This knowledge would also help me better understand the parts of pkgdb which packagers interact with.&lt;/p&gt;
&lt;p&gt;It was not my first time trying to make a package for fedora. I think this is actually my third time. I&amp;#8217;d given up before, scared by all the different tools and scattered documentation. In a previous life, I had made some &lt;a href="http://aur.archlinux.org/"&gt;AUR&lt;/a&gt; packages, but the experience is a lot different. I&amp;#8217;m now starting to get used to all the different tools that I was scared of before, like mock and rpmlint and I can now find my way around the fedora wiki for package related information. There is a wealth of information in the wiki, but you need a lot of patience.&lt;/p&gt;
&lt;p&gt;I started slow, with quite a complex application to package: &lt;a href="http://calibre.kovidgoyal.net/"&gt;Calibre&lt;/a&gt;. Having all those different distros is great when you&amp;#8217;re a packager, because you have somewhere to look for help and the Debian package of calibre helped me a lot. It took me about two days to get a somewhat acceptable version of calibre packaged, which I then posted to redhat&amp;#8217;s bugzilla. The following days I found more small apps to be packaged and it became easier and easier for me to do it. Last night for example, I was just browsing &lt;a href="http://news.ycombinator.org"&gt;Hacker News&lt;/a&gt; as usual when I found a link to &lt;a href="http://developers.facebook.com/news.php?blog=1&amp;amp;story=301"&gt;facebook&amp;#8217;s opensourcing of their web server framework&lt;/a&gt; . I just rushed to the download and installation instructions page and I quickly got it packaged. I&amp;#8217;m not saying it&amp;#8217;s perfect, it probably needs a lot of improvement, but it was fun to do. It&amp;#8217;s fun to think that you&amp;#8217;re making things easier for someone and learning a lot at the same time. I now have 5 packages waiting to be reviewed and I&amp;#8217;ve found someone willing to sponsor me into the &lt;strong&gt;packager&lt;/strong&gt; group. Anyone in a package-review mood? ;)&lt;/p&gt;
&lt;p&gt;My journey into the packaging world has been enlightening so far and the good thing is I&amp;#8217;m just beginning. There&amp;#8217;s a whole new world to be discovered out there and also another part of the fedora community.&lt;/p&gt; </description>
            <pubDate>Fri, 11 Sep 2009 10:00 GMT</pubDate>
        </item>
        <item>
            <title>GSOC - it begins...</title>
            <link>http://mapleoin.bluepink.ro/perma/GSOC-it-begins</link>
            <author>mapleoin@bluepink.ro (mapleoin)</author>
            <description>  &lt;p&gt;My Fedora proposal got accepted to this year&amp;#8217;s Google Summer of Code Program. You can look at a short abstract &lt;a href="http://socghop.appspot.com/student_project/show/google/gsoc2009/redhat/t124024691190"&gt;here&lt;/a&gt; . Now I&amp;#8217;m going to try to explain what this project is about and what I did to prepare for being accepted, hopefully without going mad about how happy I am about it.&lt;/p&gt;
&lt;p&gt;I started work on the Fedora Project almost a year ago. One day I popped on the mailing list and then on the irc channel of the infrastructure team and asked for something to do. Luckily, Toshio Kuratomi was on the watch and after giving me a short tour of the various projects he could help me get familiar with, I picked the package database. Most of the work I&amp;#8217;ve done so far is in the &lt;a href="https://admin.fedoraproject.org/pkgdb/"&gt;pkgdb&lt;/a&gt; (the search capability is the most obvious thing I worked on). The overview on the front page describes it quite well; it&amp;#8217;s got package information and it&amp;#8217;s aimed at package developers. It&amp;#8217;s not a very famous part of the fedora project websites, certainly not as famous as something like packages.ubuntu.com is for ubuntu. But that&amp;#8217;s not what it was intended for, even if that&amp;#8217;s what attracted me to the project at first. I liked the exposure of such a website, but also the fact that, at the time, it was easier for me to understand what it did and how it worked :).&lt;/p&gt;
&lt;p&gt;The idea of making the package database more user-friendly as opposed to developer-centric wasn&amp;#8217;t a new one. Toshio, the main developer had been thinking about it for a long time, but I guess it never really became a priority. The idea had also been &lt;a href="http://fedoraproject.org/wiki/SummerCoding/2008/Ideas#Package_WebUI"&gt;proposed&lt;/a&gt; for last year&amp;#8217;s &lt;span class="caps"&gt;GSOC&lt;/span&gt;, but it hadn&amp;#8217;t been accepted (this scared me a bit when I found out). I picked this idea on a whim when I told Toshio I wanted to participate in this year&amp;#8217;s &lt;span class="caps"&gt;GSOC&lt;/span&gt; on pkgdb and he asked me what exactly I wanted to do. I wasn&amp;#8217;t expecting the question, so I answered with the first thing that came to mind. Looking back, I think it was a good choice.&lt;/p&gt;
&lt;p&gt;All my involvement with the Fedora Project owes a lot to the best possible person who could have become my mentor for &lt;span class="caps"&gt;GSOC&lt;/span&gt;. The Infrastructure Team is a great one to work with, and the Fedora contributor community is made up of a lot of smart, fun and selfless people. I say this after having spent a lot of time lurking the &lt;span class="caps"&gt;IRC&lt;/span&gt; channels, the various mailing lists, the planet etc. and to a somewhat lesser extent interacting with other contributors. However, I wouldn&amp;#8217;t have continued contributing if it weren&amp;#8217;t for the continuous support and guidance of Toshio. I probably wouldn&amp;#8217;t have been able to participate in the &lt;span class="caps"&gt;GSOC&lt;/span&gt; without the many discussions (starting in February) with Toshio about the proposal and the support when explaining the idea to other community members. Having said that, I think that being familiar with the pkgdb also helped a lot with writing the proposal. I didn&amp;#8217;t have to waste time on getting to know the code, the community, the devs as I would have if I had written a proposal for a different project. I also had a fair idea of what would constitute a good proposal and a rough idea about how it could be implemented. I think this helped with my credibility in the eyes of the mentors who ranked my proposal.&lt;/p&gt;
&lt;p&gt;I was never convinced I would get a spot on Fedora &amp; JBoss&amp;#8217;s &lt;a href="http://socghop.appspot.com/org/home/google/gsoc2009/redhat"&gt;accepted proposal&amp;#8217;s list&lt;/a&gt; , but it was is a great thing to dream of. The butterflies in my stomach were killing me at the end of the waiting period, especially since it had lasted for more than 2 months. I now have a summer to work full time on my hobby :).&lt;/p&gt;
&lt;p&gt;At the end of the summer, the fedora community will hopefully have a package database with package versions, size, dependencies, rss feeds, tagging, package reviews etc. There&amp;#8217;s even a detailed &lt;a href="https://fedorahosted.org/packagedb/wiki/EndUserUI"&gt;schedule&lt;/a&gt; from my proposal you can drool on if you&amp;#8217;re so inclined.&lt;/p&gt;
&lt;p&gt;And hello, fedora planet! Sorry for being late.&lt;/p&gt; </description>
            <pubDate>Thu, 23 Apr 2009 23:00 GMT</pubDate>
        </item>
    </channel>
</rss>
