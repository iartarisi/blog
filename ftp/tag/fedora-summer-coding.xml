<?xml version="1.0" encoding="utf-8" ?>
<rss version="1.0">
    <channel>
        <title>Revolution blahg</title>
        <link>http://mapleoin.bluepink.ro/</link>
        <description>mapleoin's rambling blahg</description>
        <language>en</language>
        <pubDate>Mon, 23 Aug 2010 00:54:18 +0300</pubDate>
        <generator>pyBlee!</generator>
        <item>
            <title>Fedora Summer Coding midterm</title>
            <link>http://mapleoin.bluepink.ro/perma/midterm-report</link>
            <author>mapleoin@bluepink.ro (Oin Maple)</author>
            <description>  &lt;p&gt;This midterm scared me when I found out about it on Friday when I looked at the schedule I had set myself. However, I have done the work that I should have done by this point in the project. When I wrote the proposal I had assumed that the buildsystem would already be built before me starting coding on the TG app, but that is not the case. Therefore I could only code the user-facing &lt;span class="caps"&gt;JSON&lt;/span&gt; interface that interacts with the DB as it would if the buildsystem would provide it with packages and repos. Except that there are no packages and repos at this stage.&lt;/p&gt;
&lt;p&gt;So for this midterm, we&amp;#8217;ve got working Copr &lt;span class="caps"&gt;CRUD&lt;/span&gt;, dependency handling and release/repo editing on a Copr. I also coded the Package &lt;span class="caps"&gt;CRUD&lt;/span&gt;, which basically allows for uploads of SRPMs, stores the info in the db and also allows for information retrieval and deleting packages. Actually building packages and retrieving packagebuilds will have to wait for the buildsystem to be built.&lt;/p&gt;
&lt;p&gt;After I finish polishing things a bit, I will probably start working on a basic client and then maybe move on to working on the buildsystem part of Copr. That should be loads of fun especially since I haven&amp;#8217;t done anything quite like this before. So it will be hard, but fun :).&lt;/p&gt;
&lt;p&gt;If anyone wants to check out what Copr looks like so far, you&amp;#8217;ll just have to install TurboGears 2.0.x and then:&lt;/p&gt;
&lt;div class="Bash"&gt;&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="nv"&gt;$ &lt;/span&gt;bzr branch bzr://bzr.fedorahosted.org/bzr/copr/devel
 &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;devel
 &lt;span class="nv"&gt;$ &lt;/span&gt;python setup.py develop
 &lt;span class="nv"&gt;$ &lt;/span&gt;paster setup-app development.ini
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And you should have a working Copr. You can run the unit tests with the &lt;code&gt;nosetests&lt;/code&gt; command and all 52 of them should run fine. Yay!&lt;/p&gt;
&lt;p&gt;Congratulations to everyone who is finishing their &lt;span class="caps"&gt;FSC&lt;/span&gt; adventure today! I&amp;#8217;ll still be coding for another month or so.&lt;/p&gt; </description>
            <pubDate>Mon, 16 Aug 2010 12:17 GMT</pubDate>
        </item>
        <item>
            <title>Copr design - being all things to all people</title>
            <link>http://mapleoin.bluepink.ro/perma/copr-design-being-all-things</link>
            <author>mapleoin@bluepink.ro (Oin Maple)</author>
            <description>  &lt;p&gt;Lots of things happened this third Fedora Summer Coding week. Most people are already wrapping up, but I feel like I&amp;#8217;m still at the beginning.&lt;/p&gt;
&lt;p&gt;The biggest accomplishment of this week has got to be the fact that we (I and my mentor, Toshio) settled on a stable design for representing Coprs, Repos and their relationships. It was harder than it might seem, since we&amp;#8217;ve got all these different entities in Fedora: we&amp;#8217;ve got repos that you could look at as being either a directory with a release and an architecture or a repofile that is the same across releases and arches. When talking about releases we&amp;#8217;ve got Fedora releases (e.g. Fedora 13, Fedora 14) and then we&amp;#8217;ve got the packages for other distros with their own releases: &lt;span class="caps"&gt;EPEL&lt;/span&gt; and &lt;span class="caps"&gt;OLPC&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Now, on top of all of this we&amp;#8217;ve got Coprs and (at least) two groups of users for the API: the end-users of the Coprs &amp;#8211; the people that install the repos and the packages and the developers of the packages in the Coprs. The end users shouldn&amp;#8217;t have to deal with the intricacies of the Copr/Repos/Releases model; ideally they&amp;#8217;d just have one big button per the distribution they&amp;#8217;re using, so they can install the repo once and have it work even after they&amp;#8217;ve upgraded their distro three times or reinstalled five times (which is sort of how a repofile works). The package developers on the other hand could get hurt by the differences between different distro releases and their different packages &amp;#8211; when depending on different package versions for example.&lt;/p&gt;
&lt;p&gt;So finally we get to Coprs which should basically be a collection of packages that are available for one or more distros with each one having one or more releases. The package maintainer gets to create a Copr and choose a number of releases which they want to support with that Copr. One Copr can depend on as many other Coprs as needed. When the maintainer creates a Copr, the Copr App will automatically create repos for all of the specified releases and for each of the architectures that are supported by the buildsystem.&lt;/p&gt;
&lt;p&gt;Everything I said until now is already implemented at the level of the TurboGears App which will provide the &lt;span class="caps"&gt;API&lt;/span&gt; for the web interface and any number of &lt;span class="caps"&gt;JSON&lt;/span&gt; clients. The schema is built and the database insteraction works fine, but repos don&amp;#8217;t actually get created, because that&amp;#8217;s not part of my proposal and will be handled at a different level. Oh and it&amp;#8217;s all unit tested!&lt;/p&gt;
&lt;p&gt;This week wasn&amp;#8217;t just designing and building though, I spent a lot of time digging through TurboGears2 and its sub-packages&amp;#8217; documentation for things that should make the code simpler: raising &lt;span class="caps"&gt;JSON&lt;/span&gt; errors from nested functions, sending list arguments to &lt;span class="caps"&gt;JSON&lt;/span&gt; functions via WebTest post requests and even returning a flat list from a SQLAlchemy query on a single table column. All of these things seem to me like they should already be implemented and easy to use which makes me waste time searching for them. In fact they either are bugs or require coding them myself (at least from what I understand so far). I&amp;#8217;ll have to investigate further, especially now since the weekend is over and I hope there&amp;#8217;ll be more people answering questions on &lt;span class="caps"&gt;IRC&lt;/span&gt; and on issue trackers.&lt;/p&gt;
&lt;p&gt;This next week I&amp;#8217;ll mostly start worrying about what happens when a package maintainer submits a package to be built and that package has the right dependencies available in some releases, but not others, even though the Copr should support all of them. Will she have to submit different &lt;span class="caps"&gt;SRPMS&lt;/span&gt; for each release or should the Copr have the same version of the package in all of its releases? This will be a matter of settling upon a contract that the Copr provides its users and how uniform the Copr&amp;#8217;s content has to be.&lt;/p&gt;
&lt;p&gt;Fedora Summer Coding! Yay!&lt;/p&gt; </description>
            <pubDate>Mon, 09 Aug 2010 12:07 GMT</pubDate>
        </item>
        <item>
            <title>CRUD for Coprs and testing</title>
            <link>http://mapleoin.bluepink.ro/perma/basic-coprs-crud</link>
            <author>mapleoin@bluepink.ro (Oin Maple)</author>
            <description>  &lt;p&gt;This last week I worked on the first controller for the &lt;a href="https://fedoraproject.org/wiki/Category:Copr"&gt;Copr&lt;/a&gt; &lt;a href="https://fedoraproject.org/wiki/Summer_Coding_2010_proposal_-_Copr_TG_app"&gt;TG App&lt;/a&gt;. There is now a &lt;span class="caps"&gt;JSON&lt;/span&gt; &lt;span class="caps"&gt;API&lt;/span&gt; to &lt;span class="caps"&gt;CRUD&lt;/span&gt; Coprs in the TG App&amp;#8217;s database. It also supports adding/removing Copr dependencies. And everything in this first controller is (mostly?) tested with nose unit tests. The happy thing is I&amp;#8217;m still on schedule, though I&amp;#8217;m not ahead of it anymore, which I actually expected.&lt;/p&gt;
&lt;p&gt;I encountered a couple of problems while setting up testing. I installed python-fedora&amp;#8217;s &lt;span class="caps"&gt;FAS&lt;/span&gt; authorization repoze-who plugin and wasted a lot of time trying to get that working with webtest. In the process I managed to screw up something in my TurboGears installation. Since I was already too deep down the rabbit&amp;#8217;s hole I gave up on it. (I also figured out that I don&amp;#8217;t actually need to test anything about the &lt;span class="caps"&gt;FAS&lt;/span&gt; integration so I don&amp;#8217;t even need to install it). So I proceeded to install TG2 inside a python virtualenv which feels a lot more hygienic and will be a lot easier to replace in case of future screw-ups. I had a few problems there aswell since the documented way to install TurboGears2 without distro-packages is broken &lt;span class="caps"&gt;ATM&lt;/span&gt;, but I now have virtualenv! Yay!&lt;/p&gt;
&lt;p&gt;Now the next step is to figure out the right relationship between Coprs and Repos and write some code to manage Repos transparently for the user. I also have to learn to write more frequent status updates.&lt;/p&gt; </description>
            <pubDate>Mon, 02 Aug 2010 18:00 GMT</pubDate>
        </item>
        <item>
            <title>The late Fedora Summer coder</title>
            <link>http://mapleoin.bluepink.ro/perma/the-late-fedora-summer-coder</link>
            <author>mapleoin@bluepink.ro (Oin Maple)</author>
            <description>  &lt;p&gt;I started my &lt;a href="https://fedoraproject.org/wiki/Summer_Coding_2010"&gt;Fedora Summer Coding&lt;/a&gt; last week. Although most people started almost two months ago, I chose (and was allowed to &amp;#8211; Yay, &lt;acronym title="Fedora Summer Coding"&gt;FSC&lt;/acronym&gt;!) a different schedule because I just finished college last week.&lt;/p&gt;
&lt;p&gt;This summer I&amp;#8217;ll be working on a new project for Fedora &amp;#8211; &lt;a href="https://fedoraproject.org/wiki/Category:Copr"&gt;Copr&lt;/a&gt;. Fedora Copr will allow any Fedorian to have their own package repository with packages built and hosted by &lt;a href="https://fedoraproject.org/wiki/Infrastructure"&gt;Fedora&amp;#8217;s Infrastructure&lt;/a&gt;. My mentor this summer will be &lt;a href="http://anonbadger.wordpress.com/"&gt;Toshio&lt;/a&gt;, I&amp;#8217;ve always enjoyed working with him and this summer will be no different. &lt;a href="https://fedoraproject.org/wiki/Summer_Coding_2010_proposal_-_Copr_TG_app"&gt;Here&lt;/a&gt; is my actual &lt;acronym title="Fedora Summer Coding"&gt;FSC&lt;/acronym&gt; proposal. Although the things written in that proposal are turning out to be a bit inaccurate, it&amp;#8217;s still a good bird&amp;#8217;s eye view of what I&amp;#8217;m going to do this summer. &lt;/p&gt;
&lt;p&gt;So about the first week. Things started really slow. I did a lot of orientation, certainly more than I thought I would. I hadn&amp;#8217;t used TurboGears2 before, though I had worked with TurboGears 1.x on &lt;a href="https://admin.fedoraproject.org/pkgdb"&gt;Fedora&amp;#8217;s pkgdb&lt;/a&gt;. When I started out I had only a TG2 automatically generated skeleton app &amp;#8211; well it&amp;#8217;s mostly the same now, though at least I now know a lot more about what&amp;#8217;s in there. The fact that I had to start it up myself meant I had to learn a lot of things about TG2 that I would&amp;#8217;ve normally just copied from other parts of a fully-functional project. And that was a great experience. In a way it&amp;#8217;s fulfilling to be able to &lt;em&gt;pioneer&lt;/em&gt; things in this way ;). I&amp;#8217;m trying to only ask my mentor questions about designing the actual app and solve my &amp;#8220;How do I &amp;#8230; in TurboGears/Python?&amp;#8221; questions elsewhere. My mentor has always given me a lot of independence when working on things and that feels really good, though at times I feel inexperienced. There&amp;#8217;s the thought that the project I&amp;#8217;m working on will be used by a lot of technical users and I&amp;#8217;m really not sure what my decisions&amp;#8217; impact will be on the whole project.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m mostly on time with my &lt;a href="https://fedoraproject.org/wiki/Summer_Coding_2010_proposal_-_Copr_TG_app#Timeline"&gt;mock-up schedule&lt;/a&gt; because I had set the first week for orienteering. I also wrote the DB schema for Coprs, though that was on the second week. That doesn&amp;#8217;t mean I&amp;#8217;m ahead of schedule however, because I&amp;#8217;ll probably have a lot to work on the Copr controllers, and a lot of documenting and designing.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m proud that I setup testing after a day of wading through the scattered documentation of TurboGears2 testing. There&amp;#8217;s mostly no documentation on testing on the &lt;a href="http://www.turbogears.org/2.0/docs/toc.html"&gt;TurboGears2.0 docs website&lt;/a&gt;. So I went to the &lt;a href="http://somethingaboutorange.com/mrl/projects/nose/0.11.2/"&gt;python nose&lt;/a&gt; webpage. But they don&amp;#8217;t have any info on the TurboGears2 web helpers which I needed to use. So I went to &lt;a href="http://pylonsbook.com/en/1.1/testing.html"&gt;pylonshq docs about testing&lt;/a&gt;, but they use a slightly different syntax because they&amp;#8217;re using paste.fixture. I finally found the &lt;a href="http://turbogears.org/2.1/docs/main/Testing/index.html"&gt;TurboGears2.1 testing docs&lt;/a&gt; which was what I really needed. It turns out that TurboGears 2.x uses &lt;a href="http://pythonpaste.org/webtest/"&gt;WebTest&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So now I have testing. My project is not supposed to have any web interface at this point, so writing tests is the easiest way to prove that things are actually working.&lt;/p&gt;
&lt;p&gt;This next week I&amp;#8217;ll probably get some work done on Copr controllers. Implementing the ability to &lt;span class="caps"&gt;CRUD&lt;/span&gt; Coprs and Repos.&lt;/p&gt; </description>
            <pubDate>Sun, 25 Jul 2010 14:00 GMT</pubDate>
        </item>
    </channel>
</rss>
